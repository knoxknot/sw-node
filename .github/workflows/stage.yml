name: stage-pipeline
on:
  push:
    branches: [ stage ]
  pull_request:
    branches: [ stage ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 10.x, 12.x, 14.x ]

    steps:
    - name: checkout repository
      uses: actions/checkout@v2
    - name: build with node versions ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    # - name: cache dependencies
    #   uses: actions/cache@v2
    #   if: runner.os != "Windows"
    #   with:
    #     path: ~/.npm
    #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    #     restore-keys: |
    #       ${{ runner.os }}-node- 
    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v2
      id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-       
    - name: start continuous integration
      run: npm ci
    - name: start build
      run: npm run build --if-present
    - name: start test
      run: npm test

  quality:
    runs-on: ubuntu-18.04

    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: linting
        run: bash lint-script.sh
      - name: Lint results
        uses: actions/upload-artifact@v1
        with:
          name: app
          path: app/build/reports/lint-results-debug.html

   test:
    runs-on: ubuntu-20.04

    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: test
        run: echo testing 
    